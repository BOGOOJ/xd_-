import autogenerated.*;
import io.grpc.Status;
import io.grpc.StatusException;
import io.grpc.stub.StreamObserver;

import java.util.ArrayList;


class book{
    private String id;
    private String name;
    public book(String id, String name){
        this.id = id;
        this.name = name;
    }
    public String getID() {
        return id;
    }
    public String getName() {
        return name;
    }
}
public class CalculatorServiceImpl extends CalculatorServiceGrpc.CalculatorServiceImplBase{

    ArrayList<book> bookshelf = new ArrayList<book>();




    @Override
    public void addBook(bookInformation request, StreamObserver<bookID> responseObserver) {
        String id = request.getID();
        String name = request.getName();
        int search = 0;
        for(int i = 0;i<bookshelf.size();i++){
            if(bookshelf.get(i).getID().equals(id)){
                search = 1;
                bookID b1 = bookID.newBuilder().setID("不好意思，该书ID已存在").build();
                responseObserver.onNext(b1);
                responseObserver.onCompleted();
            }
        }
        if(search==0){
            bookshelf.add(new book(id,name));
            bookID id1 = bookID.newBuilder().setID(id).build();
            responseObserver.onNext(id1);
            responseObserver.onCompleted();
        }

    }


    @Override
    public void searchByID(bookID request, StreamObserver<bookInformation> responseObserver) {
        String id = request.getID();
        int search = 0;
        for(int i = 0;i<bookshelf.size();i++){
            if(bookshelf.get(i).getID().equals(id)){
                search = 1;
                bookInformation b1 = bookInformation.newBuilder().setID(bookshelf.get(i).getID()).
                        setName(bookshelf.get(i).getName()).build();
                responseObserver.onNext(b1);
                responseObserver.onCompleted();
            }
        }
        if(search == 0){
            bookInformation b2 = bookInformation.newBuilder().setID("同学你好").
                    setName("未检索到你查询的图书").build();
            responseObserver.onNext(b2);
            responseObserver.onCompleted();
        }
    }

    @Override
    public void searchByName(bookName request, StreamObserver<bookID> responseObserver) {
        String bookname = request.getName();
        String bookid = "";
        int search = 0;
        for(int i = 0;i<bookshelf.size();i++){
            if(bookshelf.get(i).getName().equals(bookname)){
                search = 1;
                bookid = bookid + " "+ bookshelf.get(i).getID();
            }
        }
        if(search==1){
            bookID id = bookID.newBuilder().setID(bookid).build();
            responseObserver.onNext(id);
            responseObserver.onCompleted();
        }else {
            bookID id = bookID.newBuilder().setID("未查到书籍信息").build();
            responseObserver.onNext(id);
            responseObserver.onCompleted();
        }
    }

    @Override
    public void deleteByID(bookID request, StreamObserver<bookInformation> responseObserver) {
        String bookid = request.getID();
        int search = 0;
        for (book book : bookshelf) {
            if(book.getID().equals(bookid)){
                search = 1;
                bookshelf.remove(book);
                bookInformation del_book = bookInformation.newBuilder().setID(book.getID()).
                        setName(book.getName()).build();
                responseObserver.onNext(del_book);
                responseObserver.onCompleted();
            }
        }
        if(search==0){
            bookInformation del_book = bookInformation.newBuilder().setID(request.getID()).
                    setName("没有书籍信息").build();
            responseObserver.onNext(del_book);
            responseObserver.onCompleted();
        }

    }

    @Override
    public void showBooks(bookID request, StreamObserver<bookInformation> responseObserver) {
        String information = "";
        for(int i = 0;i<bookshelf.size();i++){
            information =  information + bookshelf.get(i).getID() +" "
                    + bookshelf.get(i).getName()+ "\n" ;
        }
        bookInformation books = bookInformation.newBuilder().setID("").
                setName(information).build();
        responseObserver.onNext(books);
        responseObserver.onCompleted();
    }

}

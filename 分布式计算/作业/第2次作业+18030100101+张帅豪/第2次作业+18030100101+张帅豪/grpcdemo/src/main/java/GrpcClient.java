import autogenerated.*;

import io.grpc.ManagedChannel;
import io.grpc.ManagedChannelBuilder;

import java.util.Scanner;

/**
 * @author Ticsmyc
 * @date 2021-03-15 21:01
 */
public class GrpcClient {
    /**
     * 接收rpc服务端ip和端口
     */
    private static final String host="localhost";
	//private static final String host="115.29.151.24";
    private static final int serverport=9999;

    public static void main(String[] args) throws Exception{

        ManagedChannel managedChannel = ManagedChannelBuilder.forAddress(host, serverport).usePlaintext().build();
        try {
            //建立连接
            CalculatorServiceGrpc.CalculatorServiceBlockingStub calService = CalculatorServiceGrpc.newBlockingStub(managedChannel);

            Scanner input = new Scanner(System.in);
            System.out.println(menu());
            int choose = input.nextInt();
            while (choose != 0) {
                switch(choose) {
                    case 1: System.out.println("输入插入的书籍ID 书籍名称\n");
                        String newBookID = input.next();
                        String newName = input.next();
                        bookID book_id = calService.addBook(bookInformation.newBuilder().
                                setID(newBookID).setName(newName).build());
                        System.out.println("插入了书，编号为 : "+book_id.getID()+" ");
                        break;
                    case 2: System.out.println("输入查询的书籍ID\n");
                        String searchBookID = input.next();
                        bookInformation book_information = calService.
                                searchByID(bookID.newBuilder().setID(searchBookID).build());
                        System.out.println("查询到书籍为 : "+book_information.getID()+" "+book_information.getName());
                        break;
                    case 3: System.out.println("输入名字查询ID\n");
                        String searchBookName = input.next();
                        bookID bookid = calService.
                                searchByName(bookName.newBuilder().setName(searchBookName).build());
                        System.out.println("书籍ID为 : "+bookid.getID()+" ");
                        break;
                    case 4: System.out.println("输入书籍ID删除书籍信息\n");
                        String deleteBookID = input.next();
                        bookInformation information = calService.
                                deleteByID(bookID.newBuilder().setID(deleteBookID).build());
                        System.out.println("删除的信息为 : "+information.getID()+" "+information.getName());
                        break;
                    case 5: System.out.println("输出所有书籍信息(输入任意信息)\n");
                        String noting = input.next();
                        bookInformation information1 = calService.
                                showBooks(bookID.newBuilder().setID(noting).build());
                        System.out.println("所有书籍信息 : "+information1.getID()+"\n"+"ID  "+"书名"+"\n"+information1.getName());
                        break;

                    default: System.out.println("再次输入!\n");
                        break;
                }
                System.out.println(menu());
                choose = input.nextInt();
            }


        }finally {
            managedChannel.shutdown();
        }
    }

    public static String menu() {
        return "**********menu**********\n"
                + "1.插入书籍\n"
                + "2.搜索图书(ID)\n"
                + "3.搜索图书(名字)\n"
                + "4.删除书籍(ID)\n"
                + "5.显示所有书籍\n"
                + "0.退出\n"
                + "************************\n";
    }

}
